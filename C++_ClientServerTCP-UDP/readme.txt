Neata Adrian 321CB
	
	subscribe.cpp:
	Pentru clientul TCP am creat socket-ul server-ului si am conectat clientul la server. Clientul trimite imediat dupa ce se conecteaza un mesaj cu ID-ul sau pentru ca server-ul sa afiseze pe ecran cine s-a conectat. Intr-o bucla while verific daca am de citit de la tastatura sau de la server date. Daca am de la tastatura atunci le citesc cu fgets si verific daca string-ul primit este "exit\n" caz in care inchid clientul, daca nu este atunci trimit mesajul mai departe la server lasandu-l pe el sa interpreteze. Daca am de la server atunci folosesc recv pentru a lua mesajul si verific daca este gol caz in care inchid conexiunea cu server-ul si afisez pe ecran mesajul "Server closed.\n", altfel il afisez pe ecran direct.

	server.cpp:
	Pentru server am creat socket-ii pentru protocoalele TCP si UDP si i-am introdus intr-un fd_set. Pentru socket-ul TCP am folosit functia setsockopt pentru a dezactiva algoritmul lui Nagle. Pentru fiecare client in parte creez un fisier in care stochez mesajele care erau SF. Intr-o bucla while verific mai multe lucruri in ordine:
-daca am ceva de citit de la tastatura atunci citesc cu fgets si compar string-ul cu "exit\n", daca este identic atunci inchid toti clientii si toate fisierele deschise; daca nu atunci ignor;
-daca am ceva de citit de la socket-ul TCP inseamna ca am un client TCP care vrea sa se conecteze, caz in care ii accept cererea si astept mesajul cu ID-ul sau pentru a-l afisa pe ecran. Dupa aceea introduc fd-ul sau in fd_set si deschid si un fisier cu numele clientului (ID) pe care il retin prin intermediul file descriptor-ului intr-un map;
- daca am ceva de citit de la socket-ul UDP atunci citesc cu functia recvfrom si apoi prelucrez mesajul cu functia implementata de mine getTCPmessage care intoarce prin efect lateral mesajul de tip string care trebuie afisat clientilor abonati la topicul respectiv. Dupa aceea parcurg map-ul corespunzator acelui topic si trimit mesajul tuturor celor abonati. Daca cineva nu este abonat, dar are SF-ul pornit atunci mesajul va fi scris in fisierul cu numele sau.
-daca am ceva de citit de la un client TCP atunci citesc cu recv si verific tipul mesajului si trimit un mesaj inapoi cu fie confirmarea instructiunii introduse fie cu un "warning" referitor la scrierea gresita a instructiunii;
	1) Daca e subscribe atunci actualizez map-ul care contine informatiile subscriptiilor si apoi verific daca clientul avea SF-ul pornit in trecut pentru acel topic. Daca il avea atunci creez un nou fisier si parcurg fisierul cu numele clientului de la inceput trimitand mesajele cu topicul corespunzator clientului, si scriind mesajele de la alte topice in fisierul nou creat. Dupa aceea inlocuiesc fisierul cu numele clientului cu cel nou creat (redenumindu-l);
	2) Daca e unsubscribe atunci verific daca topic-ul exista si apoi sterg intrarea clientului in map-ul cu subscriptii, dar nu inainte sa verific daca SF-ul era activ, caz in care creez o noua intrare in map-ul care retine ce trebuie stocat in fisierele clientilor;
	3) Daca mesajul e gol, atunci clientul s-a deconectat si sterg toate intrarile sale si inchid conexiunea;
