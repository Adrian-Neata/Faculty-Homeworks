Neata Adrian 321CB

	xor_strings: pentru aceasta functie am parcurs in paralel string-ul si cheia 	facand xor intre caracterele de pe aceeasi pozitie si punand rezultatul in string;
	rolling_xor: am parcurs string-ul pana la final si apoi am facut xor intre elementul curent si cel de dinainte pentru a-l decodifica, iar apoi am pus rezultatul la pozitia curenta din string. Pentru a decodifica string-ul acesta a fost parcurs invers;
	xor_hex_strings: mi-am creat o functie auxiliara numita hex_to_dec care imi ia ca parametru adresa unui string si imi converteste din hexazecimal in decimal primele doua caractere (inlocuieste fiecare octet cu valoare corespunzatoare in decimal de exemplu 'c' va ajunge 12, iar 7 va ramane 7, iar apoi inmulteste cu 16 prima valoare si o aduna cu a doua). Dupa ce string-ul si cheia sunt convertite se face xor intre cele doua;
	base32decode: pentru aceasta functie se citesc cate 8 octeti din string (string-ul trebuie sa aiba un numar de octeti multiplu lui 8) si se convertesc la valorile corespunzatoare lor cu functia convert_base32 pastrandu-se pe stiva. In continuare am construit cate 5 octeti pe rand cu valorile celor 8 cititi. Am ales aceasta metoda deoarece mi se parea mult mai usor de citit si inteles fata de alte metode care sunt probabil la fel de rapide, dar mult mai greu de inteles;
	bruteforce_singlebyte_xor: deoarece cheia este un singur byte am luat toate numerele de la 0 la 255 prin al si am facut xor pe tot string-ul ca fiecare in parte. Dupa aceea am verificat daca in decodificare apare cuvantul "force" caz in care am gasit cheia. Altfel fac xor din nou pe string cu aceeasi cheie pentru a readuce string-ul la forma initiala si apoi incrementez al si o iau de la capat. OBSERVATIE: as fi putut folosi pentru verificare cu "force" repe cmpsb, dar din moment ce nu aveam voie sa declar o nou variabila si pentru ca string-ul are doar 5 litere m-am decis sa fac o implementare super basic (don't judge me :)) );
	decode_vigenere: primul lucru pe care l-am facut a fost sa gasesc un caracter litera din string si sa-l pun in al, apoi am calculat offset-ul si am adunat-o cu al. Am verificat in caz ca al este mai mic decat valoare ASCII a lui 'a' caz in care trebuie sa ma duc la capul alfabetului. In caz ca se ajungea la capatul cheii, puneam in variabila care retinea adresa cheii valoare ei initiala.
